{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","searchParam","setSearchParam","useState","search","setSearch","pokeName","setPokeName","pokeNumber","setPokeNumber","pokeTypes","setPokeTypes","pokeSprite","setPokeSprite","keyboard","Array","keys","useEffect","async","response","fetch","concat","pokeBody","json","name","id","types","sprites","front_default","fetchData","console","log","_jsxs","_Fragment","children","className","_jsx","src","alt","length","map","e","index","type","value","placeholder","onChange","target","onClick","undefined","toString","addKeyboardValue","correctedValue","replace","toLowerCase","transformResearch","next","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.020ace0a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './styles.scss';\n\nconst App: React.FC = () => {\n   const [searchParam, setSearchParam] = useState<number | string>();\n   const [search, setSearch] = useState<number | string>();\n   const [pokeName, setPokeName] = useState<string>('');\n   const [pokeNumber, setPokeNumber] = useState<number | undefined>();\n   const [pokeTypes, setPokeTypes] = useState([]);\n   const [pokeSprite, setPokeSprite] = useState('');\n   const keyboard = [...Array(10).keys()];\n\n    const fetchData = async () => {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${searchParam}`)\n      const pokeBody = await response.json()\n      setPokeName(pokeBody.name);\n      setPokeNumber(pokeBody.id);\n      setPokeTypes(pokeBody.types);\n      setPokeSprite(pokeBody.sprites.front_default);\n    }\n\n    useEffect(() => {\n      if (searchParam) {\n      fetchData();\n      }\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [searchParam]);\n\n   const transformResearch = (value: string | number | undefined) => {\n      const correctedValue = value.replace(/\\s+/g, \"\").toLowerCase();\n      setSearchParam(correctedValue);\n      setSearch('');\n   }\n\n   const clear = () => {\n      setSearchParam('');\n      setSearch('');\n      setPokeName('');\n   }\n\n   const next = async () => {\n      setSearchParam(pokeNumber + 1);\n   }\n\n   const previous = () => {\n      setSearchParam(pokeNumber - 1);\n   }\n   console.log(search)\n   const addKeyboardValue = (value: string |number) => {\n      (value === 0 && (search===undefined || search === \"\" ))\n      ? setSearch('') \n      : setSearch(search + value.toString());\n   } \n   \n return (\n   <>\n      <div className='topPokedex'>\n         {/* div bouton + polygone à positionner */}\n         <div className='upScreen'>\n            <div className='upScreenButton'>\n               <div className='upScreenButtonOne'></div>\n               <div className='upScreenButtonTwo'></div>\n               <div className='upScreenButtonThree'></div>\n               <div className='upScreenButtonFour'></div>\n               <div className='upScreenButtonFive'>\n                  <div className='upScreenButtonShadow'></div>\n               </div>\n            </div>\n            <div className='upScreenPolygon'></div>\n            <div className='topButtons'>\n               <div className='topButton topButtonOne'>\n                  <div className='topButtonShadow'></div>\n               </div>\n               <div className='topButton topButtonTwo'>\n                  <div className='topButtonShadow'></div>\n               </div>\n               <div className='topButton topButtonThree'>\n                  <div className='topButtonShadow'></div>\n               </div>\n            </div>\n         </div>\n         {/* div de l'écran d'affichage avec élement déco*/}\n         <div className='screen'>\n            <div className='screenElements'>\n               <div className='screenUpButtons'>\n                  <div className='screenUpButtonOne'>\n                     <div className='screenUpButtonShadow' />\n                  </div>\n                  <div className='screenUpButtonTwo'>\n                     <div className='screenUpButtonShadow' />\n                  </div>\n               </div>\n               <div className='screenBackground'>\n                  {pokeName ? (\n                        <div className='screenLoaded'>\n                           <img src={pokeSprite} alt={pokeSprite}></img>\n                           <div className='infos'>\n                              <div>Pokedex N° : {pokeNumber} </div>\n                              <div className='pokeName'>{pokeName}</div>\n                              <div className='pokeType'>{pokeTypes.length === 1 ? 'Type' : 'Types'} : {pokeTypes.map((e, index) => <span key={index}>{e.type.name}</span>)}</div>\n                           </div>\n                        </div>\n                     ) : (\n                        <div className='screenBase'>\n                        </div>\n                     )}\n               </div>\n               <div className='screenDown'>\n                  <div className='screenDownButtons'></div>\n                  <div className='screenDownButtons'></div>\n                  <div className='screenDownButtons'></div>\n               </div>\n            </div>\n         </div>\n      </div>\n      {/* div des lignes de séparation*/}\n      <div className='lines'>\n         <div className='contrastLineOne'></div>\n         <div className='contrastLineTwo'></div>\n         <div className='yellowLine'></div>\n         <div className='borderLine'></div>\n      </div>\n      {/* div fonctions navigation */}\n      <div className='bottomPokedex'>\n         {/* ecran de recherche */}\n         <div className='bottomScreen'>\n            <input value={search} type='text' placeholder='ENTER NAME OR NUMBER' onChange ={(e) => setSearch(e.target.value)} className='input_zone'/>\n            <div className='shadow one'></div>\n            <div className='shadow two'></div>\n            <div className='shadow three'></div>\n         </div>\n         <div className='bottomKeyboard'>\n            {\n               keyboard.map((value, index) => (\n                  <button className='keyboardButton' key={index} onClick={() => addKeyboardValue(value)}>{value}</button>\n               ))\n            }\n         </div>\n         {/* boutons recherche/clear */}\n         <div className='bottomButtons'>\n            <div className='bottomButtonsLeft'>\n               <button className='searchButton' onClick={() =>  transformResearch(search)}>search</button>\n               <button className='clearButton' onClick={() => clear()}>clear</button>\n            </div>\n            <div className='bottomButtonRight'>\n               <div className='upScreenButton'>\n                  <div className='upScreenButtonOne'></div>\n                  <div className='upScreenButtonTwo'></div>\n                  <div className='upScreenButtonThree'></div>\n                  <div className='upScreenButtonFour'></div>\n                  <div className='upScreenButtonFive'>\n                     <div className='upScreenButtonShadow'></div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         {/* boutons navigation */}\n         <div className='bottomNav'>\n            <button className='previousButton' onClick={() => previous()}>Previous</button>\n            <button className='nextButton' onClick={() => next()}>Next</button>\n         </div>\n      </div>\n   </>\n )\n}\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root')\n);"],"sourceRoot":""}